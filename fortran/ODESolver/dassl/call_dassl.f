      PROGRAM CALL_DASPK

      IMPLICIT NONE

C IN THIS CODE WE ASSUME THAT THE 
C MAXIMUM # SPECIES = 1500 
C MAXIMUM # REACTIONS = 100,000
C MAXIMUM # THIRDBODYREACTIONS = 100
C MAXIMUM # TROEREACTIONS = 100

      INTEGER SPMAX, RMAX, TBRMAX, TROEMAX
      PARAMETER (SPMAX = 1500, RMAX = 100000, TBRMAX=100, TROEMAX=100)

      INTEGER NSTATE, INFO(30), IWORK(1541), LRW, LIW, NEQ,
     $     REACTIONSIZE, THIRDBODYREACTIONSIZE, TROEREACTIONSIZE,
     $     REACTIONARRAY(9*RMAX), THIRDBODYREACTIONARRAY(20*TBRMAX),
     $     TROEREACTIONARRAY(21*TROEMAX), I, J, IDID, impspecies

      DOUBLE PRECISION Y(SPMAX), YPRIME(SPMAX), T, TOUT, RTOL, ATOL,
     $     RWORK(51+9*SPMAX+SPMAX**2), TEMPERATURE, PRESSURE,
     $     REACTIONRATEARRAY(5*rmax),
     $     THIRDBODYREACTIONRATEARRAY(16*Tbrmax),
     $     TROEREACTIONRATEARRAY(21*TROemax), targetconc

      COMMON /SIZE/ NSTATE, REACTIONSIZE, THIRDBODYREACTIONSIZE,
     $     TROEREACTIONSIZE

      COMMON /REAC/ REACTIONRATEARRAY, THIRDBODYREACTIONRATEARRAY,
     $     TROEREACTIONRATEARRAY, temperature, pressure,
     $     REACTIONARRAY, THIRDBODYREACTIONARRAY,
     $     TROEREACTIONARRAY

      OPEN (UNIT=12, FILE = 'SolverInput.dat', STATUS = 'OLD')

C READ THE NUMBER OF SPECIES
      READ(12,*) NSTATE, NEQ, IMPSPECIES, TARGETCONC
      NSTATE = NSTATE+1
      
C  READ THE CONCENTRATIONS
      READ(12,*) (Y(I), i=1,nstate-1)

C READ THE RATE OF CHANGE OF CONCENTRATIONS
      READ(12,*) (YPRIME(I), i=1,nstate-1)
      YPRIME(NSTATE) = 0;

c READ THE TIME AND TOUT
      READ(12,*) T, TOUT

c READ THE INFO ARRAY
      READ(12,*) (INFO(I), I=1,30)

C READ RTOL AND ATOL
      READ(12,*) RTOL, ATOL

C READ TEMPERATURE AND PRESSURE
      READ(12,*) TEMPERATURE, PRESSURE

      Y(NSTATE) = 8.314*temperature/pressure/1e-6;
      do i=1,nstate-1
         y(i) = y(i)*y(nstate)
c         write(*,*) y(i)
      end do



C READ INFORMATION ABOUT REACTIONS
      READ(12,*) REACTIONSIZE
      READ(12,*) (REACTIONARRAY(I),I=1,9*REACTIONSIZE)
      READ(12,*) (REACTIONRATEARRAY(I),I=1,5*REACTIONSIZE)

C READ INFORMATION ABOUT THIRDBODYREACTIONS
      READ(12,*) THIRDBODYREACTIONSIZE
      READ(12,*)(THIRDBODYREACTIONARRAY(I),I=1,20*THIRDBODYREACTIONSIZE)
      READ(12,*)(THIRDBODYREACTIONRATEARRAY(I),I=1,16*THIRDBODYREACTIONS
     $     IZE)
      
C READ INFORMATION ABOUT TROEREACTIONS
      READ(12,*) TROEREACTIONSIZE
      READ(12,*)(TROEREACTIONARRAY(I),I=1,21*TROEREACTIONSIZE)
      READ(12,*)(TROEREACTIONRATEARRAY(I),I=1,21*TROEREACTIONSIZE)



c READ RWORK AND IWORK
      IF (T .NE. 0.0) THEN
         OPEN(UNIT=13, FILE = 'RWORK.DAT', FORM='UNFORMATTED')
         READ(13) (RWORK(I),I=1,51+9*NSTATE+NSTATE**2)

         OPEN(UNIT=14, FILE = 'IWORK.DAT', FORM='UNFORMATTED')
         READ(14) (IWORK(I),I=1, 41+NSTATE)
      END IF


      CALL SOLVEODE(Y, YPRIME, T, TOUT, INFO, RTOL, ATOL, IDID,
     $     RWORK, IWORK, IMPSPECIES, TARGETCONC)

      END PROGRAM CALL_DASPK


      SUBROUTINE JAC()
      END SUBROUTINE JAC


      SUBROUTINE SOLVEODE(Y, YPRIME, Time, TOUT, INFO, RTOL, ATOL,
     $     IDID, RWORK, IWORK, IMPSPECIES, TARGETCONC)

      IMPLICIT NONE
      
C     INITIALIZE VARIABLES IN COMMON BLOC
      INTEGER SPMAX, RMAX, TBRMAX, TROEMAX
      PARAMETER (SPMAX = 1500, RMAX = 100000, TBRMAX=100, TROEMAX=100)

      INTEGER REACTIONSIZE, THIRDBODYREACTIONSIZE, TROEREACTIONSIZE,
     $     REACTIONARRAY(9*RMAX), THIRDBODYREACTIONARRAY(20*TBRMAX),
     $     TROEREACTIONARRAY(21*TROEMAX), I, J, NSTATE

      DOUBLE PRECISION REACTIONRATEARRAY(5*rmax),
     $     THIRDBODYREACTIONRATEARRAY(16*Tbrmax),
     $     TROEREACTIONRATEARRAY(21*TROemax), TEMPERATURE, PRESSURE

      COMMON /SIZE/ NSTATE, REACTIONSIZE, THIRDBODYREACTIONSIZE,
     $     TROEREACTIONSIZE

      COMMON /REAC/ REACTIONRATEARRAY, THIRDBODYREACTIONRATEARRAY,
     $     TROEREACTIONRATEARRAY, temperature, pressure,
     $     REACTIONARRAY, THIRDBODYREACTIONARRAY,
     $     TROEREACTIONARRAY


      INTEGER  INFO(30), LIW, LRW, IWORK(*), IPAR(1),IDID, iter,
     $     IMPSPECIES
      DOUBLE PRECISION Y(NSTATE), YPRIME(NSTATE), Time, TOUT, RTOL, ATOL
     $     , RWORK(*), TARGETCONC

      DOUBLE PRECISION RPAR(REACTIONSIZE+THIRDBODYREACTIONSIZE+
     $     TROEREACTIONSIZE),
     $     TotalReactionFlux(REACTIONSIZE+THIRDBODYREACTIONSIZE+
     $     TROEREACTIONSIZE),
     $     CURRENTReactionFlux(REACTIONSIZE+THIRDBODYREACTIONSIZE+
     $     TROEREACTIONSIZE),
     $     PREVReactionFlux(REACTIONSIZE+THIRDBODYREACTIONSIZE+
     $     TROEREACTIONSIZE), PREVTIME

      EXTERNAL RES, JAC, GETFLUX

      IPAR(1)= NSTATE

      LIW = 41 + NSTATE
      LRW = 51 + 9*NSTATE + NSTATE**2

C     ******* INITIALIZE THE REAL ARRAY
      DO I=0,REACTIONSIZE-1
         RPAR(I+1) = REACTIONRATEARRAY(5*I+1)
      END DO

      DO I=0,THIRDBODYREACTIONSIZE-1
         RPAR(REACTIONSIZE+I+1) = THIRDBODYREACTIONRATEARRAY(16*I+1)
      END DO

      DO I=0,TROEREACTIONSIZE-1
         RPAR(REACTIONSIZE+THIRDBODYREACTIONSIZE+I+1) =
     $        TROEREACTIONRATEARRAY(21*I+1)
      END DO
C     **********************************

      CALL GETFLUX(Y, YPRIME, RPAR)

      iter = 0;
      PREVTIME = TIME
      DO I=1,REACTIONSIZE+THIRDBODYREACTIONSIZE+TROEREACTIONSIZE
         PREVREACTIONFLUX(I) = 0
         TOTALREACTIONFLUX(I) = 0
         CURRENTREACTIONFLUX(I) = 0
      END DO
      call Reaction_flux(y, prevreactionflux, rpar)
      
      IF (IMPSPECIES .EQ. -1) THEN
         TARGETCONC = -1E10
         IMPSPECIES = 1
      END IF

 1    IF (Time .LE. TOUT .AND. Y(IMPSPECIES) .GE. TARGETCONC*Y(NSTATE))
     $     THEN

         CALL DDASSL(RES, NSTATE, Time, Y, YPRIME, TOUT, INFO, RTOL, 
     $        Atol, IDID, RWORK, LRW, IWORK, LIW, RPAR, IPAR, JAC)
         IF (IDID .EQ. -1) THEN
            WRITE(*,*) "Warning: 500 steps were already taken, taking
     $           another 500 steps"
            INFO(1) = 1
            GO TO 1
         ELSE IF ( IDID .EQ. 1) THEN
            iter = iter + 1
            CALL REACTION_FLUX(Y, CURRENTREACTIONFLUX, RPAR)

            DO I=1,REACTIONSIZE+THIRDBODYREACTIONSIZE+TROEREACTIONSIZE
               TOTALREACTIONFLUX(I) = TOTALREACTIONFLUX(I) +
     $              (CURRENTREACTIONFLUX(I) + PREVREACTIONFLUX(I)) *
     $              (TIME - PREVTIME)/2
               PREVREACTIONFLUX(I) = CURRENTREACTIONFLUX(I)
            END DO
            PREVTIME = TIME
c            write(*,*) time, y(impspecies), targetConc*y(nstate)
            GO TO 1
         END IF
      END IF
      

      OPEN(UNIT=16, FILE='SolverOutput.dat')

      write(16,*) iter
      WRITE(16,*) NSTATE-1
      write(16,*) time
      DO I=1,NSTATE-1
         WRITE(16,*) Y(I)/Y(NSTATE)
      END DO
      

      DO I=1,NSTATE-1
         WRITE(16,*) YPRIME(I)/Y(NSTATE)
      END DO

      DO I=1,REACTIONSIZE+THIRDBODYREACTIONSIZE+TROEREACTIONSIZE
         WRITE(16,*) TOTALREACTIONFLUX(I)
      END DO
      
      write(16,*) y(nstate)

      CLOSE(16)

      OPEN(UNIT=14, FILE='RWORK.DAT', FORM='UNFORMATTED')
      WRITE(14) (RWORK(I),I=1,LRW)
      CLOSE(14)

      OPEN(UNIT=15, FILE='IWORK.DAT', FORM='UNFORMATTED')
      WRITE(15) (IWORK(I),I=1,LIW)
      CLOSE(15)
      
      if (idid .eq. 1 .or. idid .eq. 2 .or. idid .eq. 3) then
         WRITE(*,*) "******ODESOLVER SUCCESSFUL: IDID=",idid
      else
         WRITE(*,*) "******ODESOLVER FAILED : IDID=", idid
      end if
c      write(*,*) yprime(nstate)
      END SUBROUTINE SOLVEode
            


